name: Build

on:
  push:
    branches: ["main", "master"]

  pull_request:
    branches: ["main", "master", "release-*"]
  
  workflow_dispatch:

jobs:
  artifacts:
    name: Create Artifacts (no push/upload)
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ["1.21"]
        platform: ["ubuntu-latest"]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Create CHANGELOG
        env:
          IMAGE: quay.io/git-chglog/git-chglog
          # https://quay.io/repository/git-chglog/git-chglog from tag v0.14.2
          IMAGE_SHA: 998e89dab8dd8284cfff5f8cfb9e9af41fe3fcd4671f2e86a180e453c20959e3
        run: |
          # use a pseudo tag to only include changes since last release
          NEXT_TAG=$(git describe --abbrev=0 --tags)-next

          # generate CHANGELOG
          docker run --rm -v $PWD:/workdir ${IMAGE}@sha256:${IMAGE_SHA} --next-tag ${NEXT_TAG} -o RELEASE_CHANGELOG.md ${NEXT_TAG}

      - name: Archive CHANGELOG
        uses: actions/upload-artifact@v3
        with:
          name: CHANGELOG
          path: |
            ./RELEASE_CHANGELOG.md
          retention-days: 1

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          # no push
          args: release --clean --snapshot --release-notes RELEASE_CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_TOKEN: ${{ secrets.GORELEASER_TOKEN }}

      - name: Verify git clean
        shell: bash
        run: |
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "${{ github.repository }} up to date."
          else
            echo "${{ github.repository }} is dirty."
            echo "::error:: $(git status)"
            exit 1
          fi

      - name: Archive goreleaser artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist/demo-app*.tar.gz
            dist/checksums.txt
          retention-days: 1

  release:
    needs: artifacts
    name: Build ko Artifact and ghcr.io Image (no push)
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ["1.21"]
        platform: ["ubuntu-latest"]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup ko
        # will install latest ko version and by default login/configure for ghcr.io
        uses: imjasonh/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa # v0.4.0

      - name: Check out code onto GOPATH
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get short COMMIT and TAG
        run: |
          echo "KO_COMMIT=$(echo -n $GITHUB_SHA | cut -c -8)" >> $GITHUB_ENV
          echo "KO_TAG=$(basename "${{ github.ref }}")" >> $GITHUB_ENV

      - name: Build Images (amd64 only)
        run: |
          ko resolve --tags ${KO_TAG},${KO_COMMIT},latest --push=false --bare -Rf config/ > release.yaml

      - name: Archive ko artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: |
            ./release.yaml
          retention-days: 1

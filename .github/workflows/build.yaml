name: Build

on:
  # push:
  #   branches: ["main", "master", "marsh"]

  pull_request:
    branches: ["main", "master", "release-*", "marsh"]
  
  workflow_dispatch:

concurrency: 
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:

  call-checkout-sign:
    uses: ./.github/workflows/reusable-checkout-sign.yaml

  call-unit-test:
    needs: [call-checkout-sign]
    uses: ./.github/workflows/go-unit-tests.yaml

  release:
    needs: [call-unit-test]
    name: Build ko Artifact and Docker Image (no push)
    timeout-minutes: 10
    env:
      KO_DOCKER_REPO: docker.io/embano1
    strategy:
      matrix:
        go-version: ["1.17"]
        platform: ["ubuntu-latest"]
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Check out code onto GOPATH
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Restore go cache
        id: go-cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}

      - name: Setup ko
        uses: ko-build/setup-ko@v0.6

      - name: Get short COMMIT and TAG
        run: |
          echo "KO_COMMIT=$(echo -n $GITHUB_SHA | cut -c -8)" >> $GITHUB_ENV
          echo "KO_TAG=$(basename "${{ github.ref }}")" >> $GITHUB_ENV

      - name: Build Images (amd64 only)
        run: |
          ko resolve --tags ${KO_TAG},${KO_COMMIT},latest --push=false -BRf config/service.yaml  > release.yaml
          ko publish --tags ${KO_TAG},${KO_COMMIT},latest github.com/scribe-security/ci-demo-app --push=false -B --tarball build_image.tar
      
      - name:  Evidence - SBOM image tar (exported from ko)
        id: build-sbom
        uses: scribe-security/action-bom@master
        with:
           target: docker-archive:build_image.tar
           verbose: 2
           format: json

      - name: Archive evidence - Github Artifact
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ steps.attest-cdx-source.outputs.OUTPUT_PATH }}
          retention-days: 1
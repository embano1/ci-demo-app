name: Release

on:
  # release will only be created when ref is a tag starting with "v"
  push:
    tags:
      - "v*"
      
  workflow_dispatch:

jobs:
  release:
    name: Create Release
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ["1.18"]
        platform: ["ubuntu-latest"]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: "main"

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Create CHANGELOG for Release
        env:
          IMAGE: quay.io/git-chglog/git-chglog
          # https://quay.io/repository/git-chglog/git-chglog from tag v0.14.2
          IMAGE_SHA: 998e89dab8dd8284cfff5f8cfb9e9af41fe3fcd4671f2e86a180e453c20959e3
        run: |
          # generate CHANGELOG for this Github release tag only
          docker run --rm -v $PWD:/workdir ${IMAGE}@sha256:${IMAGE_SHA} -o RELEASE_CHANGELOG.md $(basename "${{ github.ref }}" )

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          args: release --rm-dist --release-notes RELEASE_CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_TOKEN: ${{ secrets.GORELEASER_TOKEN }}

  pull-request:
    needs: release
    name: Create CHANGELOG PR
    runs-on: ubuntu-latest
    continue-on-error: true # errors caused by this job won't stop workflow

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # for changelog
          fetch-depth: 0
          ref: "main"

      - name: Create CHANGELOG commit
        env:
          IMAGE: quay.io/git-chglog/git-chglog
          # https://quay.io/repository/git-chglog/git-chglog from tag v0.14.2
          IMAGE_SHA: 998e89dab8dd8284cfff5f8cfb9e9af41fe3fcd4671f2e86a180e453c20959e3
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          # update CHANGELOG
          docker run --rm -v $PWD:/workdir ${IMAGE}@sha256:${IMAGE_SHA} -o CHANGELOG.md

          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"

          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for $(basename ${{ github.ref }})"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          delete-branch: true
          title: "Update CHANGELOG"
          body: |
            Update CHANGELOG.md for new release

  images:
    needs: release
    name: Release ko Artifact and ghcr.io Image
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ["1.18"]
        platform: ["ubuntu-latest"]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@09a077b27eb1310dcfb21981bee195b30ce09de0 # v2.2.0

      - name: Setup ko
        # will install latest ko version and by default login/configure for ghcr.io
        uses: imjasonh/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa # v0.4.0

      - name: Get Release URL
        id: get_release_url
        uses: bruceadams/get-release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Get short COMMIT and TAG
        run: |
          echo "KO_COMMIT=$(echo -n $GITHUB_SHA | cut -c -8)" >> $GITHUB_ENV
          echo "KO_TAG=$(basename "${{ github.ref }}")" >> $GITHUB_ENV

      - name: Build and Publish Images, Produce Release Artifact.
        run: |
          ko resolve --platform=all --tags ${KO_TAG},${KO_COMMIT},latest --bare -Rf config/ > release.yaml

          # extract digest from release used during signing
          echo "KO_DIGEST=$(grep -ohe "${KO_DOCKER_REPO}.*" release.yaml)" >> $GITHUB_ENV

      - name: Sign Images
        env:
          COSIGN_EXPERIMENTAL: 1 # OIDC support
        run: |
          cosign sign -a commit=$GITHUB_SHA -a tag=$KO_TAG $KO_DIGEST

      - name: Upload Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_url.outputs.upload_url }}
          asset_path: ./release.yaml
          asset_name: release.yaml
          asset_content_type: text/plain
